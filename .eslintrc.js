module.exports = {
    root: true,
    env: {
        node: true,
        es6: true,
        browser: true,
    },
    extends: [
        'plugin:vue/recommended',
        'plugin:import/typescript',
        'plugin:@typescript-eslint/recommended',
        'plugin:prettier/recommended',
        'eslint:recommended',
        '@vue/typescript/recommended',
        '@vue/prettier',
        '@vue/prettier/@typescript-eslint',
        'plugin:you-dont-need-lodash-underscore/all',
    ],
    plugins: [
        'you-dont-need-lodash-underscore',
        'vue',
        'jest',
        '@typescript-eslint',
        'import',
        'no-unsanitized',
    ],
    parser: 'vue-eslint-parser',
    reportUnusedDisableDirectives: true,
    parserOptions: {
        parser: '@typescript-eslint/parser',
        extraFileExtensions: ['.vue'],
        ecmaVersion: 2020,
    },
    rules: {
        'no-template-curly-in-string': 'error',
        'array-callback-return': 'warn',
        'consistent-return': 'warn',
        curly: 'error',
        'default-case': 'warn',
        'dot-notation': 'warn',
        eqeqeq: 'warn',
        'no-alert': 'error',
        'no-console': 'error',
        'no-caller': 'error',
        'no-div-regex': 'error',
        'no-else-return': 'warn',
        'no-eval': 'error',
        'no-extend-native': 'error',
        'no-extra-bind': 'error',
        'no-implicit-coercion': 'error',
        'no-implied-eval': 'error',
        'no-iterator': 'error',
        'no-labels': 'error',
        'no-lone-blocks': 'error',
        'no-loop-func': 'warn',
        'no-multi-str': 'error',
        'no-new': 'warn',
        'no-new-func': 'warn',
        'no-new-wrappers': 'error',
        'no-param-reassign': 'warn',
        'no-proto': 'error',
        'no-return-assign': 'error',
        'no-return-await': 'error',
        'no-self-compare': 'error',
        'no-sequences': 'error',
        'no-throw-literal': 'error',
        'no-unmodified-loop-condition': 'error',
        'no-useless-call': 'error',
        'no-useless-concat': 'error',
        'no-useless-return': 'warn',
        'no-void': 'error',
        'no-with': 'error',
        radix: 'error',
        'require-await': 'error',
        'vue/html-self-closing': [
            'error',
            {
                html: {
                    void: 'any',
                    normal: 'any',
                    component: 'always',
                },
                svg: 'any',
                math: 'any',
            },
        ],
        'vue/v-bind-style': ['error', 'longform'],
        'vue/v-on-style': ['error', 'longform'],
        'vue/attributes-order': 'off',
        'vue/component-name-in-template-casing': ['error', 'kebab-case'],
        'vue/match-component-file-name': 'error',
        'vue/require-direct-export': 'off',
        'no-restricted-syntax': [
            'error',
            {
                selector: 'TSEnumDeclaration',
                message: `[Ban TypeScript Enum] Please replace by string constant union types ("before" | "after") or plain Javascript object (Direction.before, Direction.after).`,
            },
        ],
        '@typescript-eslint/camelcase': 'off',
        '@typescript-eslint/class-literal-property-style': 'error',
        '@typescript-eslint/consistent-type-imports': 'error',
        '@typescript-eslint/explicit-function-return-type': 'error',
        '@typescript-eslint/no-explicit-any': 'error',
        '@typescript-eslint/no-unused-vars': 'error',
        '@typescript-eslint/no-use-before-define': [
            'error',
            { functions: false, typedefs: false, classes: false },
        ],
        'import/no-extraneous-dependencies': 'error',
        'no-unsanitized/property': [
            'error',
            {
                escape: {
                    methods: ['sanitize', 'render'],
                },
            },
        ],
        'no-unsanitized/method': [
            'error',
            {
                escape: {
                    methods: [
                        'sanitize',
                        'render',
                        'getPOFileFromLocale',
                        'mustache.render',
                    ],
                },
            },
        ],
    },
    overrides: [
        {
            files: ['*.ts', '*.tsx', '*.vue'],
            rules: {
                '@typescript-eslint/explicit-function-return-type': ['error'],
            },
        },
    ],
};
